name: Kernel Build

on:
  push:
    branches: [ lindrod ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout source
      uses: actions/checkout@v3

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          bc bison build-essential cpio curl flex git \
          kmod libssl-dev libncurses5-dev libelf-dev \
          python3 unzip wget xz-utils

    - name: Clone Proton Clang
      run: |
        git clone --depth=1 https://github.com/kdrag0n/proton-clang proton-clang

    - name: Restore missing touchscreen blob headers
      run: |
        wget https://github.com/pjgowtham/android_kernel_oneplus_sm8350/raw/lineage-22.2/drivers/input/touchscreen/oplus_touchscreen_v2/Focal/ft3681/FT3681_Cal_Test_app.i -O drivers/input/touchscreen/oplus_touchscreen_v2/Focal/ft3681/FT3681_Cal_Test_app.i
        wget https://github.com/pjgowtham/android_kernel_oneplus_sm8350/raw/lineage-22.2/drivers/input/touchscreen/oplus_touchscreen_v2/Focal/ft3681/FT3681_Pramboot_V1.3_20211109.i -O drivers/input/touchscreen/oplus_touchscreen_v2/Focal/ft3681/FT3681_Pramboot_V1.3_20211109.i

    - name: Alias python2 to python3
      run: |
        mkdir -p ~/bin
        ln -sf $(which python3) ~/bin/python2
        echo "PATH=$HOME/bin:$PATH" >> $GITHUB_ENV

    - name: Generate defconfig (use system GCC for host tools)
      run: |
        make O=out ARCH=arm64 SUBARCH=arm64 stock_defconfig

    - name: Build kernel with Proton Clang
      run: |
        echo "PATH=$GITHUB_WORKSPACE/proton-clang/bin:$PATH" >> $GITHUB_ENV
        echo "ARCH=arm64" >> $GITHUB_ENV
        echo "SUBARCH=arm64" >> $GITHUB_ENV
        make -j$(nproc) O=out \
          ARCH=arm64 \
          SUBARCH=arm64 \
          CC=$GITHUB_WORKSPACE/proton-clang/bin/clang \
          CROSS_COMPILE=$GITHUB_WORKSPACE/proton-clang/bin/aarch64-linux-gnu- \
          CROSS_COMPILE_ARM32=$GITHUB_WORKSPACE/proton-clang/bin/arm-linux-gnueabi- \
          CLANG_TRIPLE=$GITHUB_WORKSPACE/proton-clang/bin/aarch64-linux-gnu- \
          AR=$GITHUB_WORKSPACE/proton-clang/bin/llvm-ar \
          NM=$GITHUB_WORKSPACE/proton-clang/bin/llvm-nm \
          OBJCOPY=$GITHUB_WORKSPACE/proton-clang/bin/llvm-objcopy \
          OBJDUMP=$GITHUB_WORKSPACE/proton-clang/bin/llvm-objdump \
          STRIP=$GITHUB_WORKSPACE/proton-clang/bin/llvm-strip \
          LD=$GITHUB_WORKSPACE/proton-clang/bin/ld.lld

    #- name: Copy kernel, dtb , dtbo to AnyKernel3
     # run: |
        #git clone --depth=1 https://github.com/Saikatsaha1996/AnyKernel3 anykernel3
        #cp out/arch/arm64/boot/Image anykernel3/
        #cp out/arch/arm64/boot/dtbo.img anykernel3/
        #find out/arch/arm64/boot/dts/vendor/oplus/porsche/ -name "*.dtb" -exec cat {} + > anykernel3/dtb

    #- name: Create flashable ZIP
      #run: |
        #cd anykernel3
        #zip -r9 kernel-porsche.zip * -x .git README.md *placeholder

    #- name: Upload AnyKernel3 ZIP
      #uses: actions/upload-artifact@v4
      #with:
       #name: Flashable-ZIP
       #path: anykernel3/kernel-porsche.zip
    - name: Upload zImage or Image.gz-dtb
      uses: actions/upload-artifact@v4
      with:
        name: Kernel
        path: out/arch/arm64/boot/Image
